---@class Animations.AnimatorJobExtensions @Static class providing extension methods for Animator and the animation C# jobs.
---@field BindStreamProperty fun() @Create a PropertyStreamHandle representing the new binding on the Component property of a Transform already bound to the Animator.
---@field UnbindAllStreamHandles fun() @Removes all PropertyStreamHandles and TransformStreamHandles associated with the Animator instance. Use this method to manage the lifecycle of stream handles when the animated hierarchy changes.
---@field UnbindAllSceneHandles fun() @Removes all PropertySceneHandles and TransformSceneHandles associated with the Animator instance. Use this method to manage the lifecycle of scene handles when the animated hierarchy changes.
---@field OpenAnimationStream fun() @Open a new stream on the Animator.
---@field BindSceneTransform fun() @Create a TransformSceneHandle representing the new binding between the Animator and a Transform in the Scene.
---@field BindStreamTransform fun() @Create a TransformStreamHandle representing the new binding between the Animator and a Transform already bound to the Animator.
---@field BindCustomStreamProperty fun() @Create a custom property in the AnimationStream to pass extra data to downstream animation jobs in your graph. Custom properties created in the AnimationStream do not exist in the scene.
---@field CloseAnimationStream fun() @Close a stream that has been opened using OpenAnimationStream.
---@field BindSceneProperty fun() @Create a PropertySceneHandle representing the new binding on the Component property of a Transform in the Scene.
---@field ResolveAllSceneHandles fun() @Newly created handles are always resolved lazily on the next access when the jobs are run. To avoid a cpu spike while evaluating the jobs you can manually resolve all handles from the main thread.
---@field ResolveAllStreamHandles fun() @Newly created handles are always resolved lazily on the next access when the jobs are run. To avoid a cpu spike while evaluating the jobs you can manually resolve all handles from the main thread.
---@field AddJobDependency fun() @Creates a dependency between animator jobs and the job represented by the supplied job handle. To add multiple job dependencies, call this method for each job that need to run before the Animator's jobs.
