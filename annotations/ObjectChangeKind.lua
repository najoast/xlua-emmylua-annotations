---@class ObjectChangeKind @This enumeration describes the different kind of changes that can be tracked in an ObjectChangeEventStream. Each event has a corresponding type in ObjectChangeEvents.
---@field ChangeGameObjectStructure fun() @A change of this type indicates that the structure of a GameObject has changed. This happens when a component is added to or removed from the GameObject using Undo.AddComponent or Undo.DestroyObjectImmediate.
---@field ChangeGameObjectOrComponentProperties fun() @A change of this type indicates that a property of a GameObject or Component has changed. This happens for example when Undo.RecordObject is used with an instance of a Component.
---@field None fun() @Indicates an uninitialized value.
---@field ChangeGameObjectParent fun() @A change of this type indicates that the parent of a GameObject has changed. This happens when Undo.SetTransformParent or SceneManager.MoveGameObjectToScene is used.
---@field ChangeGameObjectStructureHierarchy fun() @A change of this type indicates that the structure of a GameObject has changed and any GameObject in the hierarchy below it might have changed. This happens for example when Undo.RegisterFullObjectHierarchyUndo is used.
---@field ChangeAssetObjectProperties fun() @A change of this type indicates that a property of an asset object in memory has changed. This happens for example when Undo.RecordObject is used with an instance of an asset (e.g. Texture).
---@field UpdatePrefabInstances fun() @A change of this type indicates that prefab instances in an open scene have been updated due to a change to the source prefab.
---@field CreateAssetObject fun() @A change of this type indicates that an asset object has been created. This happens for example when Undo.RegisterCreatedObjectUndo is used with an instance of an asset (e.g. Texture).
---@field DestroyGameObjectHierarchy fun() @A change of this type indicates that a GameObject and the entire hierarchy below it has been destroyed. This happens for example when Undo.DestroyObjectImmediate is used with an GameObject.
---@field DestroyAssetObject fun() @A change of this type indicates that an asset object has been destroyed. This happens for example when Undo.DestroyObjectImmediate is used with an instance of an asset (e.g. Texture).
---@field CreateGameObjectHierarchy fun() @A change of this type indicates that a GameObject has been created, possibly with additional objects below it in the hierarchy. This happens for example when Undo.RegisterCreatedObjectUndo is used with a GameObject.
---@field ChangeScene fun() @A change of this type indicates that an open scene has been changed (dirtied) without any more specific information available. This happens for example when EditorSceneManager.MarkSceneDirty is used.
