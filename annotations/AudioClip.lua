---@class AudioClip @A container for audio data.
---@field samples fun() @The length of the audio clip in samples. (Read Only)
---@field SetData fun() @Set sample data in a clip.
---@field preloadAudioData fun() @Preloads audio data of the clip when the clip asset is loaded. When this flag is off, scripts have to call AudioClip.LoadAudioData() to load the data before the clip can be played. Properties like length, channels and format are available before the audio data has been loaded.
---@field LoadAudioData fun() @Loads the audio data of a clip. Clips that have Preload Audio Data set will load the audio data automatically.
---@field loadState fun() @Returns the current load state of the audio data associated with an AudioClip.
---@field UnloadAudioData fun() @Unloads the audio data associated with the clip. This works only for AudioClips that are based on actual sound file assets.
---@field loadType fun() @The load type of the clip (read-only).
---@field GetData fun() @Fills an array with sample data from the clip.
---@field PCMSetPositionCallback fun() @Delegate called each time AudioClip changes read position.
---@field PCMReaderCallback fun() @Delegate called each time AudioClip reads data.
---@field frequency fun() @The sample frequency of the clip in Hertz. (Read Only)
---@field channels fun() @The number of channels in the audio clip. (Read Only)
---@field loadInBackground fun() @Corresponding to the Load In Background flag in the inspector, when this flag is set, the loading will happen delayed without blocking the main thread.
---@field length fun() @The length of the audio clip in seconds. (Read Only)
---@field Create fun() @Creates a user AudioClip with a name and with the given length in samples, channels and frequency.
---@field ambisonic fun() @Returns true if this audio clip is ambisonic (read-only).
---@field isReadyToPlay fun() @Returns true if the AudioClip is ready to play (read-only).
