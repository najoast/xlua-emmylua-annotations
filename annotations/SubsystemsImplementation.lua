---@class SubsystemsImplementation @nil
---@field SubsystemDescriptorStore fun() @Registration entry point for subsystems to register their descriptor.
---@field SubsystemWithProvider SubsystemsImplementation.SubsystemWithProvider @A subsystem is initialized from a SubsystemDescriptorWithProvider for a given subsystem (Session, Plane, Face, etc.) and provides an interface to interact with that given subsystem until it is Destroyed. After a subsystem is created, it can be Started or Stopped to turn on and off functionality and preserve performance. The base type for the subsystem only exposes this functionality; this class is designed to be a base class for derived classes that expose more functionality specific to a given subsystem.*Note:* Initializing a second subsystem from the same subsystem descriptor will return a reference to the existing subsystem, because only one subsystem is currently allowed for a single subsystem provider.
---@field SubsystemDescriptorWithProvider SubsystemsImplementation.SubsystemDescriptorWithProvider @Information about a SubsystemWithProvider that can be queried before creating a subsystem instance.
---@field SubsystemProvider fun() @A provider that supplies data to a subsystem, generally for platform-specific implementations.
